@page "/Ideas"

@inject IIdeaRepository repo

<h1>Ideas</h1>

@if (ideas == null)
{
    <p><em>Loading...</em></p>
}
else if (ideas.Count == 0)
{
    <p><em>No data...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Note</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var idea in ideas)
            {
                <tr>
                    <td>@idea.Id</td>
                    <td>@idea.Note</td>
                </tr>
            }
        </tbody>
    </table>
}

<input type="button" value="글쓰기" @onclick="btnCreateClick" class="btn btn-primary" />

@if (isShow)
{
    <div class="modal fade show" tabindex="-1" role="dialog" style="display:block;" id="myModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Modal title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="btnClose_Click">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form>
                        <div class="form-group">
                            <label for="exampleInputEmail1">아이디어</label>
                            <input type="text" class="form-control" @bind="@idea.Note">
                        </div>
                        <button type="button" class="btn btn-primary" @onclick="btnSaveClick">저장</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="btnClose_Click">취소</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}

@code {
    Idea idea = new Idea();
    private bool isShow = false;
    private List<Idea> ideas;

    protected override async Task OnInitializedAsync()
    {
        //await Task.Delay(3000);
        ideas = await repo.GetIdeas();
    }

    private void btnCreateClick()
    {
        isShow = true;
    }

    private void btnClose_Click()
    {
        isShow = false;
        idea = new Idea();
    }

    private async Task btnSaveClick()
    {
        await repo.AddIdea(idea);
        isShow = false;
        ideas = await repo.GetIdeas();
        idea = new Idea();
        
    }
}